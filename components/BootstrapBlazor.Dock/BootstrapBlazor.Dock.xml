<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BootstrapBlazor.Dock</name>
    </assembly>
    <members>
        <member name="T:BootstrapBlazor.Components.DockComponent">
            <summary>
            DockContentItem 配置项子项对标 content 配置项内部 content 配置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DockComponent.ComponentName">
            <summary>
            获得/设置 组件名称 默认 component golden-layout 渲染使用
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DockComponent.Title">
            <summary>
            获得/设置 组件 Title
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DockComponent.TitleWidth">
            <summary>
            获得/设置 组件 Title 宽度 默认 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DockComponent.TitleClass">
            <summary>
            获得/设置 组件 Title 样式 默认 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DockComponent.Class">
            <summary>
            获得/设置 组件 Class 默认 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DockComponent.Visible">
            <summary>
            获得/设置 组件是否可见 默认 true 可见
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DockComponent.ShowClose">
            <summary>
            获得/设置 组件是否允许关闭 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DockComponent.Width">
            <summary>
            获得/设置 组件宽度百分比 默认 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DockComponent.Height">
            <summary>
            获得/设置 组件高度百分比 默认 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DockComponent.Key">
            <summary>
            获得/设置 组件唯一标识值 默认 null 未设置时取 Title 作为唯一标识
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DockComponent.ComponentState">
            <summary>
            获得/设置 组件状态
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DockComponent.ChildContent">
            <summary>
            获得/设置 子组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DockComponent.IsLock">
            <summary>
            获得/设置 是否锁定 默认 false
            </summary>
            <remarks>锁定后无法拖动</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.DockComponent.TitleTemplate">
            <summary>
            获得/设置 Title 模板 默认 null 未设置
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DockComponent.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DockComponent.SetVisible(System.Boolean)">
            <summary>
            设置 Visible 参数方法
            </summary>
            <param name="visible"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.DockComponentBase">
            <summary>
            DockComponent 基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DockComponentBase.Type">
            <summary>
            获得/设置 渲染类型 默认 Component
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DockComponentBase.Content">
            <summary>
            获得/设置 DockContent 实例
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DockComponentBase.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DockComponentBase.Dispose(System.Boolean)">
            <summary>
            资源销毁方法
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.DockComponentBase.Dispose">
            <summary>
            资源销毁方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.DockContent">
            <summary>
            DockContent 类对标 content 配置项
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DockContent.ChildContent">
            <summary>
            获得/设置 子组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DockContent.Items">
            <summary>
            获得/设置 子项集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DockContent.Width">
            <summary>
            获得/设置 组件宽度百分比 默认 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DockContent.Height">
            <summary>
            获得/设置 组件高度百分比 默认 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DockContent.ShowHeader">
            <summary>
            获得/设置 组件是否显示 Header 默认 true
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DockContent.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="builder"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.DockContentType">
            <summary>
            DockContent 类型
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DockContentType.Row">
            <summary>
            行排列 水平排列
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DockContentType.Column">
            <summary>
            列排列 垂直排列
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DockContentType.Stack">
            <summary>
            标签排列
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DockContentType.Component">
            <summary>
            组件
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.DockView">
            <summary>
            DockView 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DockView.ChildContent">
            <summary>
            获得/设置 RenderFragment 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DockView.Name">
            <summary>
            获得/设置 DockView 名称 默认 null 用于本地存储识别
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DockView.OnVisibleStateChangedAsync">
            <summary>
            获得/设置 标签切换 Visible 状态时回调此方法
            </summary>
            <remarks>可用于第三方组件显示标签页状态更新</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.DockView.OnInitializedCallbackAsync">
            <summary>
            获得/设置 客户端组件脚本初始化完成后回调此方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DockView.OnTabDropCallbackAsync">
            <summary>
            获得/设置 标签页拖动完成时回调此方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DockView.OnSplitterCallbackAsync">
            <summary>
            获得/设置 标签页调整大小完成时回调此方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DockView.OnLockChangedCallbackAsync">
            <summary>
            获得/设置 锁定状态回调此方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DockView.OnResizeCallbackAsync">
            <summary>
            获得/设置 标签页位置变化时回调此方法
            </summary>
            <remarks>拖动标签 <see cref="P:BootstrapBlazor.Components.DockView.OnTabDropCallbackAsync"/> 或者调整标签  <see cref="P:BootstrapBlazor.Components.DockView.OnSplitterCallbackAsync"/> 时均触发此方法</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.DockView.IsLock">
            <summary>
            获得/设置 是否锁定 默认 false
            </summary>
            <remarks>锁定后无法拖动</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.DockView.LayoutConfig">
            <summary>
            获得/设置 布局配置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DockView.Version">
            <summary>
            获得/设置 版本设置 默认 null 未设置 用于本地配置 可通过全局统一配置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DockView.EnableLocalStorage">
            <summary>
            获得/设置 是否启用本地存储布局 默认 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DockView.LocalStoragePrefix">
            <summary>
            获得/设置 本地存储前缀 默认 bb-dock
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DockView.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DockView.OnAfterRender(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="firstRender"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.DockView.OnAfterRenderAsync(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="firstRender"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.DockView.Lock(System.Boolean)">
            <summary>
            锁定/解锁当前布局
            </summary>
            <param name="lock">true 时锁定 false 时解锁</param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DockView.GetLayoutConfig">
            <summary>
            获取布局配置
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DockView.Reset(System.String)">
            <summary>
            重置为默认布局
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DockView.VisibleChangedCallbackAsync(System.String,System.Boolean)">
            <summary>
            标签页关闭回调方法 由 JavaScript 调用
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DockView.InitializedCallbackAsync">
            <summary>
            标签页关闭回调方法 由 JavaScript 调用
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DockView.TabDropCallbackAsync">
            <summary>
            标签页关闭回调方法 由 JavaScript 调用
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DockView.SplitterCallbackAsync">
            <summary>
            标签页关闭回调方法 由 JavaScript 调用
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DockView.LockChangedCallbackAsync(System.Boolean)">
            <summary>
            锁定回调方法 由 JavaScript 调用
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DockViewConfig.EnableLocalStorage">
            <summary>
            获得/设置 是否启用本地布局保持 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DockViewConfig.IsLock">
            <summary>
            获得/设置 是否锁定 默认 false
            </summary>
            <remarks>锁定后无法拖动</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.DockViewConfig.VisibleChangedCallback">
            <summary>
            获得/设置 标签页可见状态改变事件回调
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DockViewConfig.InitializedCallback">
            <summary>
            获得/设置 组件初始化完成事件回调
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DockViewConfig.TabDropCallback">
            <summary>
            获得/设置 拖动标签页事件回调
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DockViewConfig.SplitterCallback">
            <summary>
            获得/设置 调整标签页分割线事件回调
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DockViewConfig.LockChangedCallback">
            <summary>
            获得/设置 锁定事件回调
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DockViewConfig.LocalStorageKey">
            <summary>
            获得/设置 客户端缓存键值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DockViewConfig.Contents">
            <summary>
            获得/设置 Golden-Layout 配置项集合 默认 空集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DockViewConfig.LayoutConfig">
            <summary>
            获得/设置 布局配置 默认 null 未设置
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.IDockComponent">
            <summary>
            IDockComponent 接口定义
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IDockComponent.Type">
            <summary>
            获得/设置 组件类型
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.DockComponentConverter">
            <summary>
            DockComponent 转化器
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DockComponentConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="typeToConvert"></param>
            <param name="options"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:BootstrapBlazor.Components.DockContentRootConverter">
            <summary>
            DockContentRoot 转换器
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.DockTypeConverter">
            <summary>
            DockType 转换器
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DockTypeConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="typeToConvert"></param>
            <param name="options"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:BootstrapBlazor.Components.DockTypeConverter.Write(System.Text.Json.Utf8JsonWriter,BootstrapBlazor.Components.DockContentType,System.Text.Json.JsonSerializerOptions)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="options"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.DockViewOptions">
            <summary>
            DockView 组件配置类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DockViewOptions.Version">
            <summary>
            获得/设置 组件本地化版本信息
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DockViewOptions.EnableLocalStorage">
            <summary>
            获得/设置 是否开启本地存储 默认 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DockViewOptions.LocalStoragePrefix">
            <summary>
            获得/设置 本地存储前缀 默认 bb-dock
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.DockContentExtensions">
            <summary>
            DockContent 扩展方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DockContentExtensions.GetAllItems(BootstrapBlazor.Components.DockContent)">
            <summary>
            获得 所有组件
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
    </members>
</doc>
