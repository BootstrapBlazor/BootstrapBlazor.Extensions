<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BootstrapBlazor.Chart</name>
    </assembly>
    <members>
        <member name="T:BootstrapBlazor.Components.Chart">
            <summary>
            Chart 组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Chart.ClassName">
            <summary>
            获得 样式集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Chart.StyleString">
            <summary>
            获得/设置 组件 Style 字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Chart.Title">
            <summary>
            获得/设置 图表标题
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Chart.Height">
            <summary>
            获得/设置 组件高度支持单位<para>如: 30% , 30px , 30em , calc(30%)</para>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Chart.Width">
            <summary>
            获得/设置 组件宽度支持单位<para>如: 30% , 30px , 30em , calc(30%)</para>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Chart.Responsive">
            <summary>
            获得/设置 图表所在 canvas 是否随其容器大小变化而变化 默认为 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Chart.MaintainAspectRatio">
            <summary>
            获取/设置 是否 约束图表比例 默认为 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Chart.AspectRatio">
            <summary>
            获得/设置 设置 canvas 的宽高比（值为1表示 canvas 是正方形），如果显示定义了 canvas 的高度，则此属性无效 默认为 2
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Chart.ResizeDelay">
            <summary>
            获得/设置 图表尺寸延迟变化时间 默认为 0
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Chart.Angle">
            <summary>
            获得/设置 Bubble 模式下显示角度 180 为 半圆 360 为正圆
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Chart.LoadingText">
            <summary>
            获得/设置 正在加载文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Chart.ChartType">
            <summary>
            获得/设置 图表组件渲染类型 默认为 line 图
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Chart.ChartAction">
            <summary>
            获得/设置 图表组件组件方法 默认为 Update
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Chart.IsAnimation">
            <summary>
            获得/设置 是否开启动画 默认为 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Chart.OnInitAsync">
            <summary>
            获得/设置 组件数据初始化委托方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Chart.OnClickDataAsync">
            <summary>
            获得/设置 点击图标数据回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Chart.OnAfterInitAsync">
            <summary>
            获得/设置 客户端绘制图表完毕后回调此委托方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Chart.OnAfterUpdateAsync">
            <summary>
            获得/设置 客户端更新图表完毕后回调此委托方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Chart.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Chart.OnAfterRenderAsync(System.Boolean)">
            <summary>
            OnAfterRenderAsync 方法
            </summary>
            <param name="firstRender"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Chart.Completed">
            <summary>
            图表绘制完成后回调此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Chart.OnClickCallback(System.Int32,System.Int32)">
            <summary>
            点击数据回调方法
            </summary>
            <param name="datasetIndex"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Chart.Update(BootstrapBlazor.Components.ChartAction)">
            <summary>
            更新图表方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Chart.Reload">
            <summary>
            重新加载方法, 强制重新渲染图表
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Chart.ToImageAsync(System.String)">
            <summary>
            生成图片方法
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.ChartAction">
            <summary>
            Chart 组件方法枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ChartAction.Update">
            <summary>
            更新数据源
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ChartAction.AddDataset">
            <summary>
            增加数据集
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ChartAction.RemoveDataset">
            <summary>
            减少数据集
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ChartAction.AddData">
            <summary>
            增加数据
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ChartAction.RemoveData">
            <summary>
            减少数据
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ChartAction.SetAngle">
            <summary>
            全圆/半圆
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ChartAction.Reload">
            <summary>
            重新渲染图表
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ChartAxes">
            <summary>
            Chart 图表坐标轴实体类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartAxes.Title">
            <summary>
            获得/设置 坐标轴显示名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartAxes.Color">
            <summary>
            获得/设置 坐标轴显示名称颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartAxes.Stacked">
            <summary>
            获得/设置 是否堆砌 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartAxes.TicksMin">
            <summary>
            获得/设置 比例最小步长/大小 默认 0
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartAxes.TicksMax">
            <summary>
            获得/设置 比例最大步长/大小 默认 1
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartAxes.PositionLeft">
            <summary>
            获得/设置 是否对齐到左边 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartAxes.Position">
            <summary>
            是否对齐到左边 默认 true
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ChartDataLabelPosition">
            <summary>
            Chart DataLabel 对齐方式
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ChartDataLabelPosition.Start">
            <summary>
            上
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ChartDataLabelPosition.Center">
            <summary>
            下
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ChartDataLabelPosition.End">
            <summary>
            左
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ChartDataset">
            <summary>
            Chart 图表组件数据集合实体类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartDataset.Label">
            <summary>
            获得/设置 数据集合名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartDataset.Data">
            <summary>
            获得/设置 数据集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartDataset.Fill">
            <summary>
            获得/设置 是否填充 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartDataset.Tension">
            <summary>
            获得/设置 折线曲率 默认 0.4
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartDataset.IsAxisY2">
            <summary>
            获得/设置 是否是Y2坐标轴
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartDataset.YAxisID">
            <summary>
            Y坐标轴ID
            </summary> 
        </member>
        <member name="P:BootstrapBlazor.Components.ChartDataset.PointStyle">
            <summary>
            数据点样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartDataset.ShowPointStyle">
            <summary>
            显示数据点样式 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartDataset.PointRadius">
            <summary>
            数据点半径
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartDataset.PointHoverRadius">
            <summary>
            数据点悬停半径，鼠标指向时的大小
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartDataset.BorderWidth">
            <summary>
            获得/设置 折线图(Line) 宽度 默认 3 个像素
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartDataset.BackgroundColor">
            <summary>
            获得/设置 柱状图的颜色数组
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartDataset.BorderColor">
            <summary>
            获得/设置 柱状图的边框颜色数组
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ChartDataSource">
            <summary>
            Chart 图表组件数据源
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartDataSource.Labels">
            <summary>
            获得/设置 图表 X 轴显示数据标签集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartDataSource.Data">
            <summary>
            获得 图表 数据集
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartDataSource.DataJS">
            <summary>
            传递给 JS 的配置装箱实例，内部使用，添加数据集请使用 <see cref="P:BootstrapBlazor.Components.ChartDataSource.Data"/> 属性。
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartDataSource.Options">
            <summary>
            获得 组件配置项 设置标题 轴坐标等
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartDataSource.Type">
            <summary>
            获得/设置 图标类型 默认为 line
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartDataSource.AppendData">
            <summary>
            获得/设置 扩展数据 默认为空 序列化到浏览器与数据集合 <see cref="T:BootstrapBlazor.Components.ChartDataSource"/> 合并，方便把组件未提供的参数传递到浏览器
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ChartLegendPosition">
            <summary>
            Chart 图例显示位置枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ChartLegendPosition.Top">
            <summary>
            上
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ChartLegendPosition.Bottom">
            <summary>
            下
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ChartLegendPosition.Left">
            <summary>
            左
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ChartLegendPosition.Right">
            <summary>
            右
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ChartOptions">
            <summary>
            Chart 图表组件配置项实体类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartOptions.Title">
            <summary>
            获得/设置 图表 Title
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartOptions.LegendLabelsFontSize">
            <summary>
            获得/设置 数据集合名称字体大小
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartOptions.X">
            <summary>
            获得 X 坐标轴实例集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartOptions.Y">
            <summary>
            获得 Y 坐标轴实例集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartOptions.Y2">
            <summary>
            获得 Y2 坐标轴实例集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartOptions.Responsive">
            <summary>
            获得/设置 图表所在 canvas 是否随其容器大小变化而变化 默认为 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartOptions.MaintainAspectRatio">
            <summary>
            获取/设置 是否 约束图表比例 默认为 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartOptions.AspectRatio">
            <summary>
            获得/设置 设置 canvas 的宽高比（值为1表示 canvas 是正方形），如果显示定义了 canvas 的高度，则此属性无效 默认为 2
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartOptions.ResizeDelay">
            <summary>
            获得/设置 图表尺寸延迟变化时间 默认为 0
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartOptions.Height">
            <summary>
            获得/设置 图表 canvas 高度 默认为空,跟随容器高度<para>如: 300px</para>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartOptions.Width">
            <summary>
            获得/设置 图表 canvas 宽度 默认为空,跟随容器高度 <para>如: 300px</para>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartOptions.ShowLegend">
            <summary>
            获得/设置 是否显示图例 默认 true 显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartOptions.LegendPosition">
            <summary>
            获得/设置 图例显示位置 默认 top 显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartOptions.ShowXLine">
            <summary>
            获得/设置 是否显示X轴线
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartOptions.ShowYLine">
            <summary>
            获得/设置 是否显示Y轴线
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartOptions.ShowXScales">
            <summary>
            获得/设置 是否显示X轴刻度
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartOptions.ShowYScales">
            <summary>
            获得/设置 是否显示Y轴刻度
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartOptions.OnClickDataMethod">
            <summary>
            获得/设置 点击图标数据回调方法名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartOptions.Animation">
            <summary>
            获得/设置 是否开启动画 默认为 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartOptions.Colors">
            <summary>
            获得/设置 数据显示颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartOptions.XScalesBorderColor">
            <summary>
            获得/设置 X轴边界线颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartOptions.YScalesBorderColor">
            <summary>
            获得/设置 Y轴边界线颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartOptions.YScalesSuggestedMin">
            <summary>
            获得/设置 Y轴边界建议最小值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartOptions.YScalesSuggestedMax">
            <summary>
            获得/设置 Y轴边界建议最大值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartOptions.YScalesMin">
            <summary>
            获得/设置 Y轴边界最小值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartOptions.YScalesMax">
            <summary>
            获得/设置 Y轴边界最大值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartOptions.XScalesGridColor">
            <summary>
            获得/设置 X轴网格线颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartOptions.XScalesGridBorderColor">
            <summary>
            获得/设置 X轴网格边界线颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartOptions.XScalesGridTickColor">
            <summary>
            获得/设置 X轴网格刻度线颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartOptions.YScalesGridColor">
            <summary>
            获得/设置 Y轴网格线颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartOptions.YScalesGridBorderColor">
            <summary>
            获得/设置 X轴网格边界线颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartOptions.YScalesGridTickColor">
            <summary>
            获得/设置 X轴网格刻度线颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartOptions.CanvasBackgroundColor">
            <summary>
            获得/设置 图表背景颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartOptions.ShowDataLabel">
            <summary>
            获得/设置 是否显示柱状图数据值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartOptions.BarColorSeparately">
            <summary>
            获得/设置 是否单独设置柱状图颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartOptions.Align">
            <summary>
            获得/设置 柱状图数据值的对齐方式 默认中间对齐
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartOptions.Anchor">
            <summary>
            获得/设置 柱状图数据值的位置 默认显示在顶部
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ChartOptions.ChartDataLabelColor">
            <summary>
            获得/设置 柱状图数据值的颜色
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ChartPointStyle">
            <summary>
            图标数据点样式枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ChartPointStyle.Circle">
            <summary>
            圆圈
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ChartPointStyle.Cross">
            <summary>
            交叉
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ChartPointStyle.CrossRot">
            <summary>
            交叉旋转
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ChartPointStyle.Dash">
            <summary>
            点
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ChartPointStyle.Line">
            <summary>
            线
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ChartPointStyle.Rect">
            <summary>
            矩形
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ChartPointStyle.RectRounded">
            <summary>
            矩形圆角
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ChartPointStyle.RectRot">
            <summary>
            矩形旋转
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ChartPointStyle.Star">
            <summary>
            星号
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ChartPointStyle.Triangle">
            <summary>
            三角形
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ChartType">
            <summary>
            图表类型枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ChartType.Line">
            <summary>
            Line 图
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ChartType.Bar">
            <summary>
            Bar 图
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ChartType.Pie">
            <summary>
            Pie 图
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ChartType.Doughnut">
            <summary>
            Pie 图
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ChartType.Bubble">
            <summary>
            Bubble 图
            </summary>
        </member>
    </members>
</doc>
